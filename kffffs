[1mdiff --git a/components/Cinema.tsx b/components/Cinema.tsx[m
[1mindex e99ce2b..c09a7ab 100644[m
[1m--- a/components/Cinema.tsx[m
[1m+++ b/components/Cinema.tsx[m
[36m@@ -86,7 +86,7 @@[m [mfunction Cinema({ src, thumbnail, duration, dash, peek, ratio }: Props) {[m
   function play() {[m
     try {[m
       media.current?.play()[m
[31m-      if (audio.current) audio.current?.play() //this is the one!!!!!![m
[32m+[m[32m      // if (audio.current) audio.current?.play() //this is the one!!!!!![m
     } catch (e) {[m
       console.log(e)[m
     }[m
[1mdiff --git a/components/Infos.tsx b/components/Infos.tsx[m
[1mindex 576fab7..9dd55d6 100644[m
[1m--- a/components/Infos.tsx[m
[1m+++ b/components/Infos.tsx[m
[36m@@ -29,6 +29,7 @@[m [mtype props = {[m
   onMouseEnter?: Function[m
   onWheel: Function[m
   page: "r/" | "u/" | ""[m
[32m+[m[32m  shade: boolean[m
 }[m
 [m
 type Units = {[m
[36m@@ -65,6 +66,7 @@[m [mfunction Infos({[m
   onMouseEnter = () => {},[m
   onWheel,[m
   page,[m
[32m+[m[32m  shade,[m
 }: props) {[m
   const router = useRouter()[m
   // const [page, setPage] = useState<"/r" | "/u" | "">("")[m
[36m@@ -94,7 +96,7 @@[m [mfunction Infos({[m
 [m
   return ([m
     <div[m
[31m-      className={styles.infos}[m
[32m+[m[32m      className={`${styles.infos} ${shade && styles.shade}`}[m
       onMouseEnter={(e) => onMouseEnter(e)}[m
       onMouseMove={(e) => e.stopPropagation()}[m
       onWheel={() => onWheel()}[m
[1mdiff --git a/components/autocomplete.tsx b/components/autocomplete.tsx[m
[1mindex 94e2f32..0ab65d7 100644[m
[1m--- a/components/autocomplete.tsx[m
[1m+++ b/components/autocomplete.tsx[m
[36m@@ -110,7 +110,7 @@[m [mfunction Autocomplete() {[m
       {display && ([m
         <ul className={styles.list}>[m
           {subs?.map((i) => ([m
[31m-            <Item item={i} setQuery={setQuery} />[m
[32m+[m[32m            <Item key={i.name} item={i} setQuery={setQuery} />[m
           ))}[m
           {subs?.length !== 0 && users.length !== 0 && ([m
             <li className={styles.separator}></li>[m
[36m@@ -145,8 +145,8 @@[m [mfunction Item({ item, setQuery }: { item: Item; setQuery: Function }) {[m
         <Badge side={50} text={item.name.substr(2)} color={item.primaryColor} />[m
       )}[m
       <div className={styles.infos}>[m
[31m-        <b>{item.name}</b>[m
[31m-        {item.numSubscribers && <span>{format(item.numSubscribers)}</span>}[m
[32m+[m[32m        <span>{item.name}</span>[m
[32m+[m[32m        {item.numSubscribers && <small>{format(item.numSubscribers)}</small>}[m
       </div>[m
     </a>[m
   )[m
[1mdiff --git a/components/badge.tsx b/components/badge.tsx[m
[1mindex f204489..18214eb 100644[m
[1m--- a/components/badge.tsx[m
[1m+++ b/components/badge.tsx[m
[36m@@ -11,7 +11,7 @@[m [mfunction Badge({ text, color, side }: Props) {[m
       style={{[m
         width: side + "px",[m
         height: side + "px",[m
[31m-        backgroundColor: color || "#ff0066",[m
[32m+[m[32m        backgroundColor: color || "#ffffff26",[m
         textAlign: "center",[m
         borderRadius: "100%",[m
         color: "white",[m
[1mdiff --git a/components/brick.tsx b/components/brick.tsx[m
[1mindex 8f24043..30485b9 100644[m
[1m--- a/components/brick.tsx[m
[1m+++ b/components/brick.tsx[m
[36m@@ -58,6 +58,7 @@[m [mfunction Brick({[m
           height,[m
           top: position.top,[m
           left: position.left,[m
[32m+[m[32m          border: post.media.nsfw ? "3px solid red" : "",[m
           // animation: "loading 3s linear infinite",[m
         }}[m
         onMouseEnter={() => setInfos(post.infos)}[m
[1mdiff --git a/components/content.tsx b/components/content.tsx[m
[1mindex bf481b7..7765c4b 100644[m
[1m--- a/components/content.tsx[m
[1m+++ b/components/content.tsx[m
[36m@@ -92,20 +92,6 @@[m [mfunction Content({ api, params, sorts }: Props) {[m
 [m
   return ([m
     <div ref={ref}>[m
[31m-      {infos && ([m
[31m-        <Infos[m
[31m-          infos={infos}[m
[31m-          page={[m
[31m-            params.sub && params.sub !== "popular"[m
[31m-              ? "r/"[m
[31m-              : params.user[m
[31m-              ? "u/"[m
[31m-              : ""[m
[31m-          }[m
[31m-          onMouseEnter={() => cancel()}[m
[31m-          onWheel={() => setInfos(null)}[m
[31m-        />[m
[31m-      )}[m
       <Sort words={sorts.words} sort={sort} setSort={setSort} />[m
       {post && ([m
         <Viewer[m
[36m@@ -133,6 +119,7 @@[m [mfunction Content({ api, params, sorts }: Props) {[m
               }[m
               onMouseEnter={() => cancel()}[m
               onWheel={() => setInfos(null)}[m
[32m+[m[32m              shade={false}[m
             />[m
           )}[m
         </Viewer>[m
[36m@@ -144,7 +131,23 @@[m [mfunction Content({ api, params, sorts }: Props) {[m
         loading={loading}[m
         hasMore={data.after}[m
         setInfos={setInfos}[m
[31m-      />[m
[32m+[m[32m      >[m
[32m+[m[32m        {infos && ([m
[32m+[m[32m          <Infos[m
[32m+[m[32m            infos={infos}[m
[32m+[m[32m            page={[m
[32m+[m[32m              params.sub && params.sub !== "popular"[m
[32m+[m[32m                ? "r/"[m
[32m+[m[32m                : params.user[m
[32m+[m[32m                ? "u/"[m
[32m+[m[32m                : ""[m
[32m+[m[32m            }[m
[32m+[m[32m            onMouseEnter={() => cancel()}[m
[32m+[m[32m            onWheel={() => setInfos(null)}[m
[32m+[m[32m            shade={true}[m
[32m+[m[32m          />[m
[32m+[m[32m        )}[m
[32m+[m[32m      </Masonry>[m
       {loading && <span className={styles.bar}></span>}[m
       {error && ([m
         <h1[m
[1mdiff --git a/components/cover.tsx b/components/cover.tsx[m
[1mindex b2c8693..cd7871d 100644[m
[1m--- a/components/cover.tsx[m
[1m+++ b/components/cover.tsx[m
[36m@@ -13,11 +13,11 @@[m [mfunction Cover({ banner, icon, avatar, color }: Props) {[m
       {(icon || avatar || banner) && ([m
         <div[m
           className={styles.wrapper}[m
[31m-          style={{[m
[31m-            background: !banner[m
[31m-              ? `linear-gradient(180deg,${color},#00000000)`[m
[31m-              : "",[m
[31m-          }}[m
[32m+[m[32m          // style={{[m
[32m+[m[32m          //   background: !banner[m
[32m+[m[32m          //     ? `linear-gradient(180deg,${color},#00000000)`[m
[32m+[m[32m          //     : "",[m
[32m+[m[32m          // }}[m
         >[m
           {banner && <img className={styles.banner} src={banner} alt="" />}[m
           {avatar && <img className={styles.avatar} src={avatar} alt="" />}[m
[1mdiff --git a/components/header.tsx b/components/header.tsx[m
[1mindex 30f1dfc..f45cef5 100644[m
[1m--- a/components/header.tsx[m
[1m+++ b/components/header.tsx[m
[36m@@ -37,8 +37,14 @@[m [mfunction Header({[m
           <img src="/reddikulus-logo.png" alt="" />[m
         </Link>[m
       </div>[m
[31m-      <Autocomplete />[m
[31m-      {/* <div className={styles.right}></div> */}[m
[32m+[m
[32m+[m[32m      <div className={styles.right}>[m
[32m+[m[32m        <Autocomplete />[m
[32m+[m[32m        <div className={styles.icons}>[m
[32m+[m[32m          <SiReddit />[m
[32m+[m[32m          <BsFillHeartFill />[m
[32m+[m[32m        </div>[m
[32m+[m[32m      </div>[m
     </div>[m
   )[m
 }[m
[1mdiff --git a/components/icon.tsx b/components/icon.tsx[m
[1mindex 16235dd..4a17937 100644[m
[1m--- a/components/icon.tsx[m
[1m+++ b/components/icon.tsx[m
[36m@@ -7,8 +7,18 @@[m [mimport {[m
   FaPause,[m
   FaUndo,[m
 } from "react-icons/fa"[m
[32m+[m[32mimport {[m
[32m+[m[32m  BsPlay,[m
[32m+[m[32m  BsPlayFill,[m
[32m+[m[32m  BsPause,[m
[32m+[m[32m  BsArrowCounterclockwise,[m
[32m+[m[32m} from "react-icons/bs"[m
[32m+[m[32m// import {BsPauseCircle} from 'react-icons/'[m
[32m+[m[32mimport { FiPauseCircle } from "react-icons/fi"[m
[32m+[m[32mimport { RiPauseMiniLine } from "react-icons/ri"[m
 import useTimedState from "../hooks/useTimedState"[m
 import { IoPlayOutline, IoPauseOutline } from "react-icons/io5"[m
[32m+[m[32mimport { TiMediaPauseOutline } from "react-icons/ti"[m
 import { useEffect, useState } from "react"[m
 [m
 interface Props {[m
[36m@@ -30,9 +40,9 @@[m [mfunction Icon({ state, play, pause, onMouseEnter }: Props) {[m
         else pause()[m
       }}[m
     >[m
[31m-      {state === "ended" && <FaUndoAlt />}[m
[31m-      {(state === "running" || state === "loading") && <FaPause />}[m
[31m-      {state === "paused" && <FaPlay />}[m
[32m+[m[32m      {state === "ended" && <BsArrowCounterclockwise />}[m
[32m+[m[32m      {(state === "running" || state === "loading") && <FiPauseCircle />}[m
[32m+[m[32m      {state === "paused" && <IoPlayOutline />}[m
     </div>[m
   )[m
 }[m
[1mdiff --git a/components/masonry.tsx b/components/masonry.tsx[m
[1mindex 5153f3b..3e474cc 100644[m
[1m--- a/components/masonry.tsx[m
[1m+++ b/components/masonry.tsx[m
[36m@@ -16,6 +16,8 @@[m [mimport { Post } from "../schema/post"[m
 import Brick from "../components/brick"[m
 import Infos from "./Infos"[m
 import useWindowSize from "../hooks/useWindowSize"[m
[32m+[m[32mimport useEventListener from "../hooks/useEventListener"[m
[32m+[m[32mimport { FaArrowUp, FaPlus, FaMinus } from "react-icons/fa"[m
 [m
 let n[m
 [m
[36m@@ -26,6 +28,7 @@[m [mtype Props = {[m
   loading: boolean[m
   hasMore: string[m
   setInfos: Function[m
[32m+[m[32m  children: any[m
 }[m
 [m
 function Masonry({[m
[36m@@ -35,6 +38,7 @@[m [mfunction Masonry({[m
   loading,[m
   hasMore,[m
   setInfos,[m
[32m+[m[32m  children,[m
 }: Props) {[m
   // const [selected, setSelected] = useState<Post<any> | null>()[m
   const { width, height } = useWindowSize()[m
[36m@@ -99,6 +103,7 @@[m [mfunction Masonry({[m
   //getpost : x=  , y=minH  , update minh setminH()[m
   return ([m
     <div>[m
[32m+[m[32m      {children}[m
       <div[m
         className={styles.masonry}[m
         style={{[m
[36m@@ -126,11 +131,21 @@[m [mfunction Masonry({[m
           />[m
         ))}[m
       </div>[m
[31m-      {/* {end && ([m
[31m-        <span style={{ textAlign: "center", margin: "30px 40px" }}>[m
[31m-          the end.[m
[32m+[m[32m      <div className={styles.menu}>[m
[32m+[m[32m        <span[m
[32m+[m[32m          onClick={() => {[m
[32m+[m[32m            window.scrollTo({ top: 0, behavior: "smooth" })[m
[32m+[m[32m          }}[m
[32m+[m[32m        >[m
[32m+[m[32m          <FaArrowUp />[m
         </span>[m
[31m-      )} */}[m
[32m+[m[32m        <span onClick={() => setIw(iw + 20)}>[m
[32m+[m[32m          <FaPlus />[m
[32m+[m[32m        </span>[m
[32m+[m[32m        <span onClick={() => setIw(iw - 20)}>[m
[32m+[m[32m          <FaMinus />[m
[32m+[m[32m        </span>[m
[32m+[m[32m      </div>[m
     </div>[m
   )[m
 }[m
[1mdiff --git a/components/panel.tsx b/components/panel.tsx[m
[1mindex ba8933b..ebbec0c 100644[m
[1m--- a/components/panel.tsx[m
[1m+++ b/components/panel.tsx[m
[36m@@ -31,7 +31,7 @@[m [mfunction Panel({ topics, topic, setTopic, setOpen }: Props) {[m
           <a[m
             href={"/topics/" + t}[m
             className={styles.link}[m
[31m-            onClick={(e) => handleItemClick(e, t)}[m
[32m+[m[32m            onClick={(e) => handleItemClick(e, "/topics/" + t)}[m
           >[m
             <div className={styles.wrapper}>[m
               <img src="/boo.jpg" alt="" />[m
[1mdiff --git a/components/sublist.tsx b/components/sublist.tsx[m
[1mindex 5412881..d8f67f5 100644[m
[1m--- a/components/sublist.tsx[m
[1m+++ b/components/sublist.tsx[m
[36m@@ -6,6 +6,7 @@[m [mimport useLoadSubs from "../hooks/useLoadSubs"[m
 import format from "../utils/format"[m
 import Link from "next/link"[m
 import router from "next/router"[m
[32m+[m[32mimport { IoIosArrowDown } from "react-icons/io"[m
 [m
 interface Props {[m
   query: string[m
[36m@@ -54,9 +55,9 @@[m [mfunction Sublist({ query }: Props) {[m
           ))}[m
       </ul>[m
       {data.after && ([m
[31m-        <button className={styles.more} onClick={() => setAfter(data.after)}>[m
[31m-          see more[m
[31m-        </button>[m
[32m+[m[32m        <span className={styles.more} onClick={() => setAfter(data.after)}>[m
[32m+[m[32m          <IoIosArrowDown />[m
[32m+[m[32m        </span>[m
       )}[m
     </div>[m
   )[m
[1mdiff --git a/components/subpanel.tsx b/components/subpanel.tsx[m
[1mindex d73d9bb..fe14aa6 100644[m
[1m--- a/components/subpanel.tsx[m
[1m+++ b/components/subpanel.tsx[m
[36m@@ -48,7 +48,7 @@[m [mfunction Subpanel({ subs, setOpen }: Props) {[m
                 alt=""[m
               />[m
             ) : ([m
[31m-              <Badge side={50} text={"mmm"} color={"magenta"} />[m
[32m+[m[32m              <Badge side={50} text={"mmm"} color={"#ffffff26"} />[m
             )}[m
           </div>[m
           <span className={styles.text}>{s.name}</span>[m
[1mdiff --git a/helpers/process.ts b/helpers/process.ts[m
[1mindex f7e6aaa..6d230cd 100644[m
[1m--- a/helpers/process.ts[m
[1m+++ b/helpers/process.ts[m
[36m@@ -104,6 +104,7 @@[m [mfunction gallery(data: Data): Gallery {[m
     ratio: 0,[m
     thumbnails: [],[m
     urls: [],[m
[32m+[m[32m    nsfw: data.over_18,[m
   }[m
   Object.keys(data.media_metadata).map((k) => {[m
     pic = data.media_metadata[k][m
[36m@@ -136,6 +137,7 @@[m [mfunction video(data: Data): Video {[m
     url: data.media.reddit_video.fallback_url,[m
     timestamp: "",[m
     dash: data.secure_media?.reddit_video?.dash_url,[m
[32m+[m[32m    nsfw: data.over_18,[m
   }[m
   img = data.preview?.images[0].source[m
   if (!img) alert("no img : " + data.permalink)[m
[36m@@ -153,6 +155,7 @@[m [mfunction image(data: Data): Image {[m
       /&amp;/g,[m
       "&"[m
     ),[m
[32m+[m[32m    nsfw: data.over_18,[m
   }[m
   img = data.preview?.images[0].source[m
   i.ratio = img.width / img.height[m
[36m@@ -168,6 +171,7 @@[m [mfunction gif(data: Data): Gif {[m
     poster: data.preview?.images[0].source?.url,[m
     peek: data.preview?.images[0].variants?.mp4?.resolutions[0]?.url,[m
     url: data.preview?.images[0].variants?.mp4?.source?.url,[m
[32m+[m[32m    nsfw: data.over_18,[m
   }[m
   img = data.preview?.images[0].source[m
   g.ratio = img.width / img.height[m
[1mdiff --git a/hooks/useLoadData.tsx b/hooks/useLoadData.tsx[m
[1mindex 748f037..06bdd58 100644[m
[1m--- a/hooks/useLoadData.tsx[m
[1m+++ b/hooks/useLoadData.tsx[m
[36m@@ -4,6 +4,10 @@[m [mimport Data from "../schema/data"[m
 import process from "../helpers/process"[m
 import request from "../utils/request"[m
 [m
[32m+[m[32mconst apis = {[m
[32m+[m[32m  sub: "d",[m
[32m+[m[32m}[m
[32m+[m
 export default function useLoadData([m
   api: string,[m
   params: { [key: string]: string }[m
[36m@@ -72,7 +76,12 @@[m [mexport default function useLoadData([m
       if (api === "/api/posts")[m
         d = await request(`r/${params.sub}/${params.sort}`, params)[m
       else d = await request(api, params)[m
[31m-[m
[32m+[m[32m      //sub | topic[m
[32m+[m[32m      //https://api.reddit.com/r/popular/hot?sub=popular&&sort=hot&&after=&&raw_json=1[m
[32m+[m[32m      //search[m
[32m+[m[32m      //https://api.reddit.com/subreddits/search?q=bryce+dallas&limit=16&after=[m
[32m+[m[32m      //user[m
[32m+[m[32m      //https://api.reddit.com/u/ILoveRegenHealth?sort=new&&after=t1_hvm3xcn&&raw_json=1[m
       let ps = d.data.children[m
         .map((d: any) => process(d.data))[m
         .filter((r: any) => r !== null)[m
[1mdiff --git a/pages/r/[subreddit].tsx b/pages/r/[subreddit].tsx[m
[1mindex 83a130a..dae3047 100644[m
[1m--- a/pages/r/[subreddit].tsx[m
[1m+++ b/pages/r/[subreddit].tsx[m
[36m@@ -29,7 +29,8 @@[m [mtype Props = {[m
 [m
 function Subreddit({ sub, about }: Props) {[m
   const router = useRouter()[m
[31m-[m
[32m+[m[32m  // const api =[m
[32m+[m[32m  //   "https://api.reddit.com/r/popular/hot?sub=popular&&sort=hot&&after=&&raw_json=1"[m
   // useEffect(() => {[m
   //   async function call() {[m
   //     let data = await api(`r/${router.query.subreddit}/about`, {[m
[36m@@ -40,32 +41,46 @@[m [mfunction Subreddit({ sub, about }: Props) {[m
   //   call()[m
   // }, [])[m
 [m
[31m-  if (!about) return <h1>subreddit "{sub}" doesn't exist.</h1>[m
[31m-  if (about.nsfw)[m
[32m+[m[32m  function api(type = "sub", page: string, sort: string, after: string) {[m
[32m+[m[32m    return `r/${page}/${sort}?after=${after}&&raw_json=1`[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  if (!about)[m
     return ([m
[31m-      <div[m
[31m-        style={{[m
[31m-          display: "flex",[m
[31m-          flexDirection: "column",[m
[31m-          alignItems: "center",[m
[31m-          border: "1px solid red",[m
[31m-          // height: "100vh",[m
[31m-          gap: "20px",[m
[31m-        }}[m
[31m-      >[m
[31m-        <p>this is a +18 community</p>[m
[31m-        <img src="/bonk.webp" alt="" />[m
[31m-        <p>[m
[31m-          <span[m
[31m-            style={{ color: "#ff0066", cursor: "pointer" }}[m
[31m-            onClick={() => router.back()}[m
[31m-          >[m
[31m-            get back[m
[31m-          </span>[m
[31m-          &nbsp;or go to horny jail![m
[31m-        </p>[m
[31m-      </div>[m
[32m+[m[32m      <h1>[m
[32m+[m[32m        subreddit not found{" "}[m
[32m+[m[32m        <span style={{ color: "#ff0066" }}>[m
[32m+[m[32m          ≽([m
[32m+[m[32m          <span style={{ color: "rgb(255, 181, 249)" }}>ᴗ_ᴗˇ </span>[m
[32m+[m[32m          )≼[m
[32m+[m[32m        </span>[m
[32m+[m[32m      </h1>[m
     )[m
[32m+[m[32m  // if (about.nsfw)[m
[32m+[m[32m  //   return ([m
[32m+[m[32m  //     <div[m
[32m+[m[32m  //       style={{[m
[32m+[m[32m  //         display: "flex",[m
[32m+[m[32m  //         flexDirection: "column",[m
[32m+[m[32m  //         alignItems: "center",[m
[32m+[m[32m  //         border: "1px solid red",[m
[32m+[m[32m  //         // height: "100vh",[m
[32m+[m[32m  //         gap: "20px",[m
[32m+[m[32m  //       }}[m
[32m+[m[32m  //     >[m
[32m+[m[32m  //       <p>this is a +18 community</p>[m
[32m+[m[32m  //       <img src="/bonk.webp" alt="" />[m
[32m+[m[32m  //       <p>[m
[32m+[m[32m  //         <span[m
[32m+[m[32m  //           style={{ color: "#ff0066", cursor: "pointer" }}[m
[32m+[m[32m  //           onClick={() => router.back()}[m
[32m+[m[32m  //         >[m
[32m+[m[32m  //           get back[m
[32m+[m[32m  //         </span>[m
[32m+[m[32m  //         &nbsp;or go to horny jail![m
[32m+[m[32m  //       </p>[m
[32m+[m[32m  //     </div>[m
[32m+[m[32m  //   )[m
 [m
   return ([m
     <div>[m
[36m@@ -96,33 +111,35 @@[m [mfunction Subreddit({ sub, about }: Props) {[m
 export const getServerSideProps: GetServerSideProps = async (context) => {[m
   let sub = context.params?.subreddit[m
   let res = await fetch(`https://reddit.com/r/${sub}/about.json?raw_json=1`)[m
[32m+[m[32m  if (res.status !== 200) return { props: { sub, about: null } }[m
[32m+[m
   let data = await res.json()[m
[31m-  let about: About | null[m
[32m+[m[32m  if (data.kind === "Listing") return { props: { sub, about: null } }[m
[32m+[m
[32m+[m[32m  let about: About[m
 [m
[31m-  if (data.kind === "Listing") about = null[m
[31m-  else[m
[31m-    about = {[m
[31m-      banner:[m
[31m-        data.data.banner_background_image ||[m
[31m-        data.data.banner_img ||[m
[31m-        data.data.mobile_banner_image,[m
[31m-      icon:[m
[31m-        data.data.community_icon || data.data.icon_img || data.data.header_img,[m
[31m-      title: data.data.title,[m
[31m-      subscribers: data.data.subscribers,[m
[31m-      created: data.data.created,[m
[31m-      public_description: data.data.public_description,[m
[31m-      color:[m
[31m-        data.data.banner_background_color ||[m
[31m-        data.data.primary_color ||[m
[31m-        data.data.key_color,[m
[31m-      allow_media:[m
[31m-        data.data.allow_galleries ||[m
[31m-        data.data.allow_videogifs ||[m
[31m-        data.data.allow_videos ||[m
[31m-        data.data.allow_images,[m
[31m-      nsfw: data.data.over18,[m
[31m-    }[m
[32m+[m[32m  about = {[m
[32m+[m[32m    banner:[m
[32m+[m[32m      data.data.banner_background_image ||[m
[32m+[m[32m      data.data.banner_img ||[m
[32m+[m[32m      data.data.mobile_banner_image,[m
[32m+[m[32m    icon:[m
[32m+[m[32m      data.data.community_icon || data.data.icon_img || data.data.header_img,[m
[32m+[m[32m    title: data.data.title,[m
[32m+[m[32m    subscribers: data.data.subscribers,[m
[32m+[m[32m    created: data.data.created,[m
[32m+[m[32m    public_description: data.data.public_description,[m
[32m+[m[32m    color:[m
[32m+[m[32m      data.data.banner_background_color ||[m
[32m+[m[32m      data.data.primary_color ||[m
[32m+[m[32m      data.data.key_color,[m
[32m+[m[32m    allow_media:[m
[32m+[m[32m      data.data.allow_galleries ||[m
[32m+[m[32m      data.data.allow_videogifs ||[m
[32m+[m[32m      data.data.allow_videos ||[m
[32m+[m[32m      data.data.allow_images,[m
[32m+[m[32m    nsfw: data.data.over18,[m
[32m+[m[32m  }[m
   return { props: { sub, about } }[m
 }[m
 [m
[1mdiff --git a/pages/topics/[topic].tsx b/pages/topics/[topic].tsx[m
[1mindex f9431a1..0d66e3a 100644[m
[1m--- a/pages/topics/[topic].tsx[m
[1m+++ b/pages/topics/[topic].tsx[m
[36m@@ -31,11 +31,20 @@[m [mfunction Topic({ topic, sub }: { topic: string; sub: string }) {[m
 export const getServerSideProps: GetServerSideProps = async (context) => {[m
   let topic = context.params?.topic[m
 [m
[31m-  let topics = JSON.parse(fs.readFileSync("data.json", "utf8"))[m
[31m-  let sub = topics[m
[31m-    .find((t: any) => t.topic === topic)[m
[31m-    .subs.map((s: any) => s.name)[m
[31m-    .reduce((a: string, v: string) => a + "%2B" + v)[m
[32m+[m[32m  let sub = await fetch([m
[32m+[m[32m    "https://raw.githubusercontent.com/maathi/topics/master/data.json"[m
[32m+[m[32m  )[m
[32m+[m[32m    .then((r) => r.json())[m
[32m+[m[32m    .then((d) => d.find((t: any) => t.topic === topic))[m
[32m+[m[32m    .then((t) => t.subs.map((s: any) => s.name))[m
[32m+[m[32m    .then((s) => s.reduce((a: string, v: string) => a + "%2B" + v))[m
[32m+[m[32m    .catch((e) => console.log(e))[m
[32m+[m[32m  console.log(sub)[m
[32m+[m[32m  // let topics = JSON.parse(fs.readFileSync("data.json", "utf8"))[m
[32m+[m[32m  // let sub = topics[m
[32m+[m[32m  //   .find((t: any) => t.topic === topic)[m
[32m+[m[32m  //   .subs.map((s: any) => s.name)[m
[32m+[m[32m  //   .reduce((a: string, v: string) => a + "%2B" + v)[m
 [m
   return { props: { topic, sub } }[m
 }[m
[1mdiff --git a/pages/u/[user].tsx b/pages/u/[user].tsx[m
[1mindex abebf1e..1e77554 100644[m
[1m--- a/pages/u/[user].tsx[m
[1m+++ b/pages/u/[user].tsx[m
[36m@@ -24,8 +24,8 @@[m [mtype Props = {[m
 }[m
 [m
 function User({ user, about }: Props) {[m
[31m-  if (!about) return <h1>user doesn't exist</h1>[m
[31m-  if (about.nsfw) return <h1>horny police on the way, Bonk!</h1>[m
[32m+[m[32m  if (!about) return <h1>user not found</h1>[m
[32m+[m[32m  // if (about.nsfw) return <h1>horny police on the way, Bonk!</h1>[m
 [m
   return ([m
     <div>[m
[36m@@ -52,9 +52,13 @@[m [mfunction User({ user, about }: Props) {[m
 export const getServerSideProps: GetServerSideProps = async (context) => {[m
   let user = context.params?.user[m
   let res = await fetch(`https://reddit.com/u/${user}/about.json?raw_json=1`)[m
[31m-  if (res.status === 404) return { props: { user: null, about: null } }[m
[32m+[m[32m  // if (res.status === 404 || res.status === 400)[m
[32m+[m[32m  if (res.status !== 200) return { props: { user: user, about: null } }[m
[32m+[m
   let data = await res.json()[m
 [m
[32m+[m[32m  if (data.data.is_suspended) return { props: { user: user, about: null } }[m
[32m+[m
   let about = {[m
     title: data.data.subreddit.title,[m
     // name: data.data.name,[m
[1mdiff --git a/schema/post.ts b/schema/post.ts[m
[1mindex 607c081..db66bc1 100644[m
[1m--- a/schema/post.ts[m
[1m+++ b/schema/post.ts[m
[36m@@ -5,6 +5,7 @@[m [mtype Post<M> = {[m
 [m
 type Media = {[m
   ratio: number[m
[32m+[m[32m  nsfw: boolean[m
 }[m
 [m
 interface Image extends Media {[m
[1mdiff --git a/styles/autocomplete.module.css b/styles/autocomplete.module.css[m
[1mindex 992c39a..c03501a 100644[m
[1m--- a/styles/autocomplete.module.css[m
[1m+++ b/styles/autocomplete.module.css[m
[36m@@ -5,23 +5,25 @@[m
 }[m
 [m
 .autocomplete input {[m
[31m-  width: 500px;[m
[32m+[m[32m  width: 250px;[m
   border: none;[m
   height: 40px;[m
   padding-left: 45px;[m
   color: white;[m
   caret-color: var(--sorbe);[m
   font-size: 18px;[m
[31m-  background-color: #170029;[m
[32m+[m[32m  /* background-color: #170029; */[m
[32m+[m
[32m+[m[32m  background-color: #0f001b;[m
   border-radius: 30px;[m
   transition: 0.3s;[m
   border: 3px solid transparent;[m
 }[m
 [m
 .autocomplete input:focus {[m
[31m-  border: 2px solid var(--sorbe);[m
[32m+[m[32m  /* border: 1px solid var(--sorbe); */[m
   /* width: 400px; */[m
[31m-  transition: 0.3s;[m
[32m+[m[32m  /* transition: 0.3s; */[m
 }[m
 [m
 .autocomplete input:focus + svg {[m
[1mdiff --git a/styles/header.module.css b/styles/header.module.css[m
[1mindex 6de22e4..8ef696e 100644[m
[1m--- a/styles/header.module.css[m
[1m+++ b/styles/header.module.css[m
[36m@@ -1,15 +1,23 @@[m
 .header {[m
[31m-  height: 50px;[m
[32m+[m[32m  /* height: 50px; */[m
   display: flex;[m
   justify-content: space-between;[m
[31m-  background: #250040;[m
[32m+[m[32m  /* margin: auto 20px; */[m
[32m+[m[32m  /* padding-top: 20px; */[m
[32m+[m[32m  /* padding: 25px; */[m
[32m+[m[32m  /* padding: 5px; */[m
[32m+[m[32m  /* padding-right: 10px; */[m
[32m+[m[32m  /* border: 1px solid red; */[m
[32m+[m[32m  /* background: #250040; */[m
[32m+[m[32m  /* background: #170027; */[m
[32m+[m[32m  padding-top: 10px;[m
 }[m
 [m
 .left,[m
 .right {[m
   display: flex;[m
   align-items: center;[m
[31m-  gap: 15px;[m
[32m+[m[32m  gap: 30px;[m
 }[m
 [m
 .open {[m
[36m@@ -52,31 +60,23 @@[m
   box-shadow: 0 0 6px 2px var(--sorbe);[m
 }[m
 [m
[31m-/* .icons {[m
[32m+[m[32m.icons {[m
   display: flex;[m
   align-items: center;[m
[31m-  gap: 1rem;[m
[31m-}[m
[31m-[m
[31m-.icons > :nth-child(1) {[m
[31m-  color: white;[m
[32m+[m[32m  gap: 20px;[m
 }[m
[31m-.icons > :nth-child(2) {[m
[31m-  color: #ff4500;[m
[31m-  background-color: white;[m
[31m-  border-radius: 100%;[m
[31m-} */[m
 [m
[31m-.session {[m
[32m+[m[32m/* .session {[m
   display: flex;[m
   align-items: center;[m
   gap: 20px;[m
[31m-}[m
[32m+[m[32m} */[m
 /* .session > svg:hover {[m
   color: var(--sorbe);[m
   transition: 0.3s;[m
 } */[m
[31m-.user {[m
[32m+[m
[32m+[m[32m/* .user {[m
   cursor: pointer;[m
   display: flex;[m
   align-items: center;[m
[36m@@ -100,4 +100,4 @@[m
   border-radius: 100%;[m
   background-color: var(--ocean-light);[m
   transition: 0.5s;[m
[31m-}[m
[32m+[m[32m} */[m
[1mdiff --git a/styles/infos.module.css b/styles/infos.module.css[m
[1mindex 002ede6..9633c9b 100644[m
[1m--- a/styles/infos.module.css[m
[1m+++ b/styles/infos.module.css[m
[36m@@ -6,11 +6,6 @@[m
   padding-bottom: 4px;[m
   z-index: 2;[m
   width: 100%;[m
[31m-  background: linear-gradient([m
[31m-    180deg,[m
[31m-    rgba(0, 0, 0, 0.6) 0%,[m
[31m-    rgba(0, 0, 0, 0) 100%[m
[31m-  );[m
   display: flex;[m
   flex-direction: column;[m
   text-shadow: 0 0 5px black, 0 0 10px black, 0 0 10px black;[m
[36m@@ -19,6 +14,15 @@[m
   /* transition: 0.3s; */[m
 }[m
 [m
[32m+[m[32m.shade {[m
[32m+[m[32m  background: linear-gradient([m
[32m+[m[32m    180deg,[m
[32m+[m[32m    rgba(0, 0, 0, 0.6) 0%,[m
[32m+[m[32m    rgba(0, 0, 0, 0) 100%[m
[32m+[m[32m  );[m
[32m+[m[32m  z-index: 1;[m
[32m+[m[32m}[m
[32m+[m
 .top {[m
   font-weight: bold;[m
 }[m
[1mdiff --git a/styles/masonry.module.css b/styles/masonry.module.css[m
[1mindex 5dfb1ad..20faa07 100644[m
[1m--- a/styles/masonry.module.css[m
[1m+++ b/styles/masonry.module.css[m
[36m@@ -2,3 +2,34 @@[m
   position: relative;[m
   /* height: fit-content; */[m
 }[m
[32m+[m
[32m+[m[32m.menu {[m
[32m+[m[32m  /* border: 1px solid yellowgreen; */[m
[32m+[m[32m  position: fixed;[m
[32m+[m[32m  bottom: 0;[m
[32m+[m[32m  right: 0;[m
[32m+[m[32m  /* width: 40px; */[m
[32m+[m[32m  /* height: 30px; */[m
[32m+[m[32m  display: flex;[m
[32m+[m[32m  gap: 10px;[m
[32m+[m[32m  flex-direction: column;[m
[32m+[m[32m  z-index: 1;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.menu > * {[m
[32m+[m[32m  cursor: pointer;[m
[32m+[m[32m  background: #ffffff49;[m
[32m+[m[32m  height: 40px;[m
[32m+[m[32m  width: 40px;[m
[32m+[m[32m  border-radius: 100%;[m
[32m+[m[32m  cursor: pointer;[m
[32m+[m[32m  display: flex;[m
[32m+[m[32m  justify-content: center;[m
[32m+[m[32m  align-items: center;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.menu > *:hover {[m
[32m+[m[32m  background: #ff006f28;[m
[32m+[m[32m  color: #ff006f;[m
[32m+[m[32m  transition: 0.3s;[m
[32m+[m[32m}[m
[1mdiff --git a/styles/sort.module.css b/styles/sort.module.css[m
[1mindex 45e60f0..be502cc 100644[m
[1m--- a/styles/sort.module.css[m
[1m+++ b/styles/sort.module.css[m
[36m@@ -3,7 +3,7 @@[m
   gap: 20px;[m
   justify-content: flex-end;[m
   /* border: 1px solid red; */[m
[31m-  margin-right: 30px;[m
[32m+[m[32m  margin-right: 50px;[m
 }[m
 [m
 .word {[m
[1mdiff --git a/styles/sublist.module.css b/styles/sublist.module.css[m
[1mindex c326abe..7ae7efa 100644[m
[1m--- a/styles/sublist.module.css[m
[1m+++ b/styles/sublist.module.css[m
[36m@@ -1,6 +1,6 @@[m
 .sublist {[m
   /* border: 1px solid white; */[m
[31m-  /* margin: auto 3rem; */[m
[32m+[m[32m  margin: auto 20px;[m
   /* width: 100vw; */[m
 }[m
 [m
[36m@@ -40,6 +40,7 @@[m
   align-items: center;[m
   gap: 15px;[m
   transition: 0.3s;[m
[32m+[m[32m  height: 70px;[m
   /* box-shadow: 0 0 2px 0px #b30083; */[m
 }[m
 /* .sub > * {[m
[36m@@ -89,9 +90,6 @@[m
   height: 55px;[m
   transition: 0.3s;[m
 } */[m
[31m-.more {[m
[31m-  text-align: center;[m
[31m-}[m
 [m
 .circle {[m
   background-color: grey;[m
[36m@@ -103,7 +101,7 @@[m
 .rectangles {[m
   flex: 1;[m
   height: 100%;[m
[31m-  padding: 5px;[m
[32m+[m[32m  /* padding: 5px; */[m
   /* border: 1px solid red; */[m
 }[m
 [m
[36m@@ -131,3 +129,24 @@[m
     background: #ffffff26;[m
   }[m
 }[m
[32m+[m
[32m+[m[32m.more {[m
[32m+[m[32m  width: 100px;[m
[32m+[m[32m  cursor: pointer;[m
[32m+[m[32m  display: flex;[m
[32m+[m[32m  align-items: flex-end;[m
[32m+[m[32m  justify-content: center;[m
[32m+[m[32m  /* gap: 5px; */[m
[32m+[m[32m  /* font-weight: 500; */[m
[32m+[m[32m  font-size: 30px;[m
[32m+[m[32m  background: #ffffff26;[m
[32m+[m[32m  border-radius: 30px;[m
[32m+[m[32m  padding: 5px 15px;[m
[32m+[m[32m  margin: 30px auto;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.more:hover {[m
[32m+[m[32m  color: #ff006f;[m
[32m+[m[32m  background: #ff006f28;[m
[32m+[m[32m  transition: 0.3s;[m
[32m+[m[32m}[m
